<collectd-configuration xmlns="http://xmlns.opennms.org/xsd/config/collectd" threads="50">
   <package name="collectionsuite.jmx" remote="false">
      <filter>IPADDR != '0.0.0.0'</filter>
      <service name="collect.jmx.cassandra" interval="300000" user-defined="false" status="on">
         <parameter key="port" value="7199"/>
         <parameter key="retry" value="2"/>
         <parameter key="timeout" value="3000"/>
         <parameter key="protocol" value="rmi"/>
         <parameter key="urlPath" value="/jmxrmi"/>
         <parameter key="collection" value="jmx-cassandra30x"/>
         <parameter key="friendly-name" value="cassandra"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="factory" value="PASSWORD_CLEAR"/>
         <parameter key="username" value="${requisition:cassandra-user|cassandra-username}"/>
         <parameter key="password" value="${requisition:cassandra-pass|cassandra-password}"/>
      </service>
      <service name="collect.jmx.newts" interval="300000" user-defined="false" status="on">
         <parameter key="port" value="7199"/>
         <parameter key="retry" value="2"/>
         <parameter key="timeout" value="3000"/>
         <parameter key="protocol" value="rmi"/>
         <parameter key="urlPath" value="/jmxrmi"/>
         <parameter key="collection" value="jmx-cassandra30x-newts"/>
         <parameter key="friendly-name" value="cassandra-newts"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="factory" value="PASSWORD_CLEAR"/>
         <parameter key="username" value="${requisition:cassandra-user|cassandra-username}"/>
         <parameter key="password" value="${requisition:cassandra-pass|cassandra-password}"/>
      </service>
   </package>

   <package name="collectionsuite.vmware3" remote="false">
      <filter>(IPADDR != '0.0.0.0') &amp; (categoryName == 'VMware3')</filter>
      <service name="collect.vmware.vm" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-VirtualMachine3"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-HostSystem3"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.cim.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-ESX-HostSystem"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
   </package>
   <package name="collectionsuite.vmware4" remote="false">
      <filter>(IPADDR != '0.0.0.0') &amp; (categoryName == 'VMware4')</filter>
      <service name="collect.vmware.vm" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-VirtualMachine4"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-HostSystem4"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.cim.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-ESX-HostSystem"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
   </package>

   <package name="collectionsuite.vmware5" remote="false">
      <filter>(IPADDR != '0.0.0.0') &amp; (categoryName == 'VMware5')</filter>
      <service name="collect.vmware.vm" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-VirtualMachine5"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-HostSystem5"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.cim.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-ESX-HostSystem"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
   </package>

   <package name="collectionsuite.vmware6" remote="false">
      <filter>(IPADDR != '0.0.0.0') &amp; (categoryName == 'VMware6')</filter>
      <service name="collect.vmware.vm" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-VirtualMachine6"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-HostSystem6"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.cim.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-ESX-HostSystem"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
   </package>

   <package name="collectionsuite.vmware7" remote="false">
      <filter>(IPADDR != '0.0.0.0') &amp; (categoryName == 'VMware7')</filter>
      <service name="collect.vmware.vm" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-VirtualMachine7"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-HostSystem7"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.vmware.cim.host" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default-ESX-HostSystem"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
   </package>

   <package name="collectionsuite.opennms" remote="false">
      <filter>IPADDR != '0.0.0.0'</filter>
      <include-range begin="1.1.1.1" end="254.254.254.254"/>
      <include-range begin="::1" end="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"/>
      <service name="collect.jmx.opennms" interval="300000" user-defined="false" status="on">
         <parameter key="port" value="18980"/>
         <parameter key="retry" value="2"/>
         <parameter key="timeout" value="3000"/>
         <parameter key="rrd-base-name" value="java"/>
         <parameter key="collection" value="jsr160"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="ds-name" value="opennms-jvm"/>
         <parameter key="friendly-name" value="opennms-jvm"/>
      </service>
      <service name="collect.jmx.minion" interval="300000" user-defined="false" status="on">
         <parameter key="port" value="18980"/>
         <parameter key="retry" value="2"/>
         <parameter key="timeout" value="3000"/>
         <parameter key="rrd-base-name" value="java"/>
         <parameter key="collection" value="jmx-minion"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="ds-name" value="jmx-minion"/>
         <parameter key="friendly-name" value="jmx-minion"/>
         <parameter key="use-foreign-id-as-system-id" value="true"/>
      </service>
      <service name="collect.jmx.kafka" interval="300000" user-defined="false" status="on">
         <parameter key="port" value="${requisition:kafka-port|9999}"/>
         <parameter key="retry" value="2"/>
         <parameter key="timeout" value="3000"/>
         <parameter key="rrd-base-name" value="java"/>
         <parameter key="collection" value="jmx-kafka"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="ds-name" value="jmx-kafka"/>
         <parameter key="friendly-name" value="jmx-kafka"/>
      </service>
      <service name="collect.sql.postgres.opennms" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="driver" value="org.postgresql.Driver"/>
         <parameter key="data-source" value="opennms"/>
      </service>
      <service name="collect.sql.postgres.opennms.stats" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="PostgreSQL"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="driver" value="org.postgresql.Driver"/>
         <parameter key="data-source" value="opennms-admin"/>
      </service>
   </package>

   <package name="collectionsuite.300s" remote="false">
      <filter>IPADDR != '0.0.0.0'</filter>
      <include-range begin="1.1.1.1" end="254.254.254.254"/>
      <include-range begin="::1" end="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"/>
      <service name="collect.json.elasticsearch" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="xml-elasticsearch-cluster-stats"/>
         <parameter key="handler-class" value="org.opennms.protocols.json.collector.DefaultJsonCollectionHandler"/>
      </service>
      <service name="collect.prometheus.windows-exporter" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="windows-exporter"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="url" value="http://INTERFACE_ADDRESS:9182/metrics"/>
         <parameter key="timeout" value="3000"/>
         <parameter key="retry" value="2"/>
      </service>
      <service name="collect.prometheus.node-exporter" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="node-exporter"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="url" value="http://INTERFACE_ADDRESS:9100/metrics"/>
         <parameter key="timeout" value="3000"/>
         <parameter key="retry" value="2"/>
      </service>
      <service name="collect.snmp" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.sql.postgres" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="PostgreSQL"/>
         <parameter key="thresholding-enabled" value="true"/>
         <parameter key="driver" value="org.postgresql.Driver"/>
         <parameter key="user" value="${requisition:pg-user|postgres}"/>
         <parameter key="password" value="${requisition:pg-pass|postgres}"/>
         <parameter key="url" value="jdbc:postgresql://OPENNMS_JDBC_HOSTNAME:5432/opennms"/>
      </service>
      <service name="collect.wmi" interval="300000" user-defined="false" status="off">
         <parameter key="collection" value="default"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
      <service name="collect.ws-man" interval="300000" user-defined="false" status="on">
         <parameter key="collection" value="default"/>
         <parameter key="thresholding-enabled" value="true"/>
      </service>
   </package>

   <collector service="collect.jmx.opennms" class-name="org.opennms.netmgt.collectd.Jsr160Collector"/>
   <collector service="collect.jmx.minion" class-name="org.opennms.netmgt.collectd.Jsr160Collector"/>
   <collector service="collect.jmx.cassandra" class-name="org.opennms.netmgt.collectd.Jsr160Collector"/>
   <collector service="collect.jmx.newts" class-name="org.opennms.netmgt.collectd.Jsr160Collector"/>
   <collector service="collect.jmx.kafka" class-name="org.opennms.netmgt.collectd.Jsr160Collector"/>
   <collector service="collect.json.elasticsearch" class-name="org.opennms.protocols.xml.collector.XmlCollector"/>
   <collector service="collect.prometheus.windows-exporter" class-name="org.opennms.netmgt.collectd.prometheus.PrometheusCollector"/>
   <collector service="collect.prometheus.node-exporter" class-name="org.opennms.netmgt.collectd.prometheus.PrometheusCollector"/>
   <collector service="collect.snmp" class-name="org.opennms.netmgt.collectd.SnmpCollector"/>
   <collector service="collect.sql.postgres" class-name="org.opennms.netmgt.collectd.JdbcCollector"/>
   <collector service="collect.sql.postgres.opennms" class-name="org.opennms.netmgt.collectd.JdbcCollector"/>
   <collector service="collect.sql.postgres.opennms.stats" class-name="org.opennms.netmgt.collectd.JdbcCollector"/>
   <collector service="collect.vmware.vm" class-name="org.opennms.netmgt.collectd.VmwareCollector"/>
   <collector service="collect.vmware.host" class-name="org.opennms.netmgt.collectd.VmwareCollector"/>
   <collector service="collect.vmware.cim.host" class-name="org.opennms.netmgt.collectd.VmwareCimCollector"/>
   <collector service="collect.wmi" class-name="org.opennms.netmgt.collectd.WmiCollector"/>
   <collector service="collect.ws-man" class-name="org.opennms.netmgt.collectd.WsManCollector"/>
</collectd-configuration>
